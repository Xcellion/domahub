user www-data;
worker_processes  1;
pid /run/nginx.pid;

events {
    worker_connections  1024;
}


http {

    ##
    # BASIC SETTINGS
    ##

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 0;
    types_hash_max_size 2048;
    client_max_body_size 3m;
    include mime.types;
    default_type application/octet-stream;

    ##
    # SSL Settings
    ##

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
    ssl_prefer_server_ciphers on;

    ##
  	# Gzip Settings
  	##

  	gzip on;
  	gzip_disable "msie6";

  	gzip_vary on;
  	gzip_proxied any;
  	gzip_comp_level 6;
  	gzip_buffers 16 8k;
  	gzip_http_version 1.1;
  	gzip_min_length 256;
  	gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/vnd.ms-fontobject application/x-font-ttf font/opentype image/svg+xml image/x-icon;

    ##
    # LUA RESTY SETTINGS
    ##

    lua_shared_dict auto_ssl 1m;
    lua_shared_dict auto_ssl_settings 64k;

    access_log /usr/local/openresty/nginx/logs/access_openresty.log;
    error_log /usr/local/openresty/nginx/logs/error_openresty.log debug;

    resolver 8.8.8.8 ipv6=off;

    ##
    #  DOMA API REQUEST
    ##

    init_by_lua_block {
        auto_ssl = (require "resty.auto-ssl").new()

        auto_ssl:set("allow_domain", function(domain)

  	    local http = require("resty.http")
  	    local httpc = http.new()

  	    httpc:set_timeout(5000)

  	    local res, err = httpc:request_uri("http://127.0.0.1:9090",{
      	    method = "GET",
      	    headers = {
      	        ["DomaApi"] = true,
      	        ["Host"] = domain,
      	    },
  	    })

  	    if not res then
      	    print("Failed to request: ", err)
      	    return false;
  	    end

  	    if res.status == 200 then
      	    print("Premium listing! Getting SSL certificate...")
      	    return true
  	    end

  	    if res.status == 404 then
      	    print("Not Premium! No need for SSL...")
      	    ngx.ctx.no_ssl = true
      	    return false
  	    end

  	    print("Unexpected response from Doma API")
  	        return false
        end)

        auto_ssl:init()
    }

    init_worker_by_lua_block {
        auto_ssl:init_worker()
    }

    ##
    # Virtual Host Configs
    ##

    include /usr/local/nginx/conf/sites-enabled/*;
}
